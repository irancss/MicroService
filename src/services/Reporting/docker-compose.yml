version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: reporting-postgres
    environment:
      POSTGRES_DB: ReportingService
      POSTGRES_USER: reporting_user
      POSTGRES_PASSWORD: reporting_pass
      POSTGRES_MULTIPLE_DATABASES: ReportingService,ReportingService_Hangfire
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - reporting-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reporting_user -d ReportingService"]
      interval: 30s
      timeout: 10s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: reporting-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - reporting-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # Redis (اختیاری - برای caching)
  redis:
    image: redis:7-alpine
    container_name: reporting-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - reporting-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Reporting Service API
  reporting-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reporting-service-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=ReportingService;Username=reporting_user;Password=reporting_pass;
      - ConnectionStrings__HangfireConnection=Host=postgres;Database=ReportingService_Hangfire;Username=reporting_user;Password=reporting_pass;
      - ConnectionStrings__RabbitMQ=rabbitmq://guest:guest@rabbitmq:5672
      - ReportingService__RetentionDays=1095
      - ReportingService__DefaultCurrency=USD
      - Hangfire__WorkerCount=4
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - reporting-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  reporting-network:
    driver: bridge
    name: reporting-network

volumes:
  postgres_data:
    name: reporting-postgres-data
  rabbitmq_data:
    name: reporting-rabbitmq-data
  redis_data:
    name: reporting-redis-data
